#! /bin/bash
# postrm script for ${package_name}
#

#set -e

if [ -f /usr/share/debconf/confmodule ]; then
	. /usr/share/debconf/confmodule
fi

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <r>overwrit>r> <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

package_name="restore-ee-frontend"

# Make sure that notifications are sent to user

#db_get ${package_name}/webserver || true
webserver="apache2"

case "$1" in
    purge|remove)
	# Un-configure webservers
	for i in $webserver; do
	    if [ -L /etc/$i/conf.d/restore.conf ]; then
		rm -f /etc/$i/conf.d/restore.conf || true
		restart="$i $restart"
	    fi
	done
      
	servers="apache apache-ssl apache-perl apache2"
	. /usr/share/wwwconfig-common/restart.sh

	if [ "$1" = "purge" ]; then
		db_purge || true
	fi

    ;;

    upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)

    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

# Automatically added by dh_installdebconf
if [ "$1" = purge ] && [ -e /usr/share/debconf/confmodule ]; then
	. /usr/share/debconf/confmodule
	db_purge
fi
# End automatically added section
# Automatically added by dh_installinit
if [ "$1" = "purge" ] ; then
	update-rc.d restore-frontend remove >/dev/null || exit $?
fi
# End automatically added section


exit 0

